#[enable(brainfuck)]


fn eq(a, b) {
    if sub(a, b) {
        return 0;
    } else {
        return 1;
    }
}

fn start() {
    println("#include <stdio.h>\n#include <stdlib.h>\n\n#define TAPE_SIZE 50\nvoid panic(char *msg) {\n    fprintf(stderr, \"panic: %s\\n\", msg);\n    exit(-1);\n}\nvoid print_tape(unsigned int *tape, unsigned int size) { for (unsigned int i = 0; i < size; i++) { printf(\"%u \", tape[i]); } putchar(10); }\nunsigned int allocate(unsigned int *tape, unsigned int ptr, unsigned int *taken_cells) {\n    unsigned int requested_mem = tape[ptr];\n    unsigned int consecutive_zero_cells = 0;\n    for (int i=TAPE_SIZE-1; i>0; i--) {\n        if (taken_cells[i] == 0) {\n            consecutive_zero_cells++;\n        } else {\n            consecutive_zero_cells = 0;\n        }\n        if (consecutive_zero_cells >= requested_mem) {\n            unsigned int addr = i;\n            for (int j=0; j<requested_mem; j++) {\n                taken_cells[addr + j] = requested_mem - j;\n            }\n            return addr;\n        }\n    }\n    panic(\"no free memory\");\n}\nvoid free_mem(unsigned int *tape, unsigned int ptr, unsigned int *taken_cells) {\n    unsigned int address = tape[ptr];\n    unsigned int size = taken_cells[address];\n\n    for (int i=0; i<size; i++) {\n        taken_cells[address+i] = 0;\n        tape[address+i] = 0;\n    }\n}\nvoid zero(unsigned int *tape) {\n    for (int i = 0; i < TAPE_SIZE; i++) tape[i] = 0;\n}\nint main() {\n    unsigned int tape[TAPE_SIZE], taken_cells[TAPE_SIZE], ref_tape[256]; \n    unsigned int ptr = 0, ref_ptr = 0;\n    zero(tape);\n    zero(taken_cells);\n");

    def ch = getch();
    while ch {
        if eq(']', ch) {
            println("    }\n");
        }
        if eq('[', ch) {
            println("    while (tape[ptr]) {\n");
        }
        if eq('?', ch) {
            println("    tape[ptr] = allocate(tape, ptr, taken_cells);\n");
        }
        if eq('>', ch) {
            println("    ptr++;\n");
        }
        if eq('<', ch) {
            println("    ptr--;\n");
        }
        if eq('.', ch) {
            println("    putchar(tape[ptr]);\n");
        }
        if eq('-', ch) {
            println("    tape[ptr]--;\n");
        }
        if eq(',', ch) {
            println("    tape[ptr] = getchar();\n");
        }
        if eq('+', ch) {
            println("    tape[ptr]++;\n");
        }
        if eq('*', ch) {
            println("    ref_tape[ref_ptr++] = ptr; ptr = tape[ptr];\n");
        }
        if eq('&', ch) {
            println("    ptr = ref_tape[--ref_ptr];\n");
        }
        if eq('#', ch) {
            println("    scanf(\"%d\", &tape[ptr]);\n");
        }
        if eq('$', ch) {
            println("    printf(\"%d\", tape[ptr]);\n");
        }
        if eq('!', ch) {
            println("    free_mem(tape, ptr, taken_cells);\n");
        }
        ch = getch();
    }
    println("print_tape(tape, 50);}\n");
}
